################################################################################
# Scenario:
# Searching for a specific password with a view to either using it for
# automation, or to update it based on it being due for renewal
################################################################################
---
- hosts: localhost
  gather_facts: no

  ##############################################################################
  # searchpasswords allows the apikey to narrow the search criteria rather than
  # polling all password lists using the systemwide API KEY. This allows for
  # finer programatic access and mitigates duplicate responses.
  # Note that > 1 result will be returned if search criteria is not granular
  # enough!
  ##############################################################################

  tasks:
  - name: Search for a password with specific API key access.
    vars:
      passwordstate_apicall: searchpasswords
      passwords_apikey: "{{ password_sample_apikey }}"
      passwordstate_params:
        - key: 'title'
          value: 'Server01'
        - key: 'username'
          value: 'root'
    include_role:
        name: ansible-role-passwordstate
  - debug:
      var: searchpasswords.json
      verbosity: 1

  - name: Validate results (only one allowed in this scenario)
    debug:
        msg:  "{{ searchpasswords.json |length }} results recieved.
          Narrow search criteria"
    when: searchpasswords.json |length > 1
    failed_when: searchpasswords.json |length > 1

  - name: Generate a new Password
    vars:
      passwordstate_apicall: generatepassword
      passwordstate_params:
        - key: 'PasswordGeneratorID'
          value: '3'
    include_role:
        name: ansible-role-passwordstate
  - debug:
      var: generatepassword.json
      verbosity: 1

  - name: Update the original Password
    vars:
      passwordstate_apicall: passwords
      passwords_apikey: "{{ password_sample_apikey }}"
      passwordstate_postdata:
        - key: 'PasswordID'
          value: "{{ searchpasswords.json[0].PasswordID }}"
        - key: 'password'
          value: "{{ generatepassword.json[0].Password }}"
    include_role:
        name: ansible-role-passwordstate
  - debug:
      var: password.json
      verbosity: 1
